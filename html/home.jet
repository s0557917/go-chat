<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Document</title>

    <style>
        .chatbox{
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the homepage</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <p><a href="https://github.com">Go to github</a></p>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>

                <hr>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

                <input type="hidden" name="action" id="action">

                <div id="status" class="mt-2 float-end">

                </div>

                <div id="output" class="chatbox mt-3">

                </div>
            </div>
            <div class="col-md-4">
                <h3>Who's online</h3>

                <ul id="online_users">

                </ul>
            </div>
        </div>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/static/reconnecting-websocket.min.js"></script>

<script>
    var socket = null;
    const outputBox = document.getElementById("output");
    const userField = document.getElementById("username");
    const messageField = document.getElementById("message");

    window.onbeforeunload = () => {
        console.log("Leaving")
        const jsonData = {
            "action": "left"
        }

        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function() {
        var socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconnectInterval: 3000})

        const offline = `<span class="badge bg-danger">Not Connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        let statusDiv = document.getElementById("status")

        socket.onopen = () => {
            console.log("Succesfully connected")
            statusDiv.innerHTML = online;
        }

        socket.onclose = () => {
            console.log("Connection closed")
            statusDiv.innerHTML = offline;
        }

        socket.onerror = (err) => {
            console.log("There was an error: ", err)
            statusDiv.innerHTML = offline;
        }

        socket.onmessage = (message) => {
            const data = JSON.parse(message.data)
            console.log("Action is ", data.action)

            switch (data.action) {
                case "list_users":
                    const ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);
                    
                    if(data.connected_users.length > 0 ) {
                        data.connected_users.forEach(user => {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(user));
                            ul.appendChild(li);
                        });
                    }

                    break;
                case "broadcast":
                    outputBox.innerHTML = outputBox.innerHTML + data.message + "<br>";
                    return;
            }

        }

        userField.addEventListener("change", function() {
            let jsonData = {
                "action": "username",
                "username": this.value, 
            };

            socket.send(JSON.stringify(jsonData))
        })

        messageField.addEventListener("keydown", function() {
            if (event.code === "Enter") {
                if(!socket) {
                    console.log("No connection!")
                    return false
                } else {
                    event.preventDefault();
                    event.stopPropagation();

                    if((userField.value === "") || (messageField.value === "")) {
                        errorMessage("Fill out username and message!")
                        return false
                    } else {
                        sendMessage();
                    }
                }
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function() {
            if((userField.value === "") || (messageField.value === "")) {
                errorMessage("Fill out username and message!")
                return false
            } else {
                sendMessage();
            }
        })

    })

    function sendMessage() {
        let jsonData = {
            "action": "broadcast",
            "username": userField.value,
            "message": messageField.value,
        }

        socket.send(JSON.stringify(jsonData))
        messageField.value = "";

    }

    function errorMessage(msg) {
        notie.alert({
            type: "error",
            text: msg
        })
    }
</script>
</html>
